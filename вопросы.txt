1. Распространение событий (Event Propagation)

Процесс прохождения события через элементы DOM.
Фазы:

Погружение (capturing) — событие идёт сверху вниз.

Цель (target) — достигает целевого элемента.

Всплытие (bubbling) — идёт снизу вверх.

Применение: делегирование событий, перехват действий до цели, изоляция кликов, глобальная аналитика.

2. Promise и Event Loop

Promise — объект для работы с асинхронными операциями.
Состояния: ожидание (pending), успешно (fulfilled), ошибка (rejected).
Позволяет последовательно обрабатывать асинхронный код.
Альтернатива — async/await, колбэки, Observables.

Event Loop управляет порядком выполнения:
сначала синхронный код, затем microtasks (промисы), потом macrotasks (setTimeout).

3. ООП (Объектно-ориентированное программирование)

Парадигма, основанная на работе с объектами.
Принципы:

Инкапсуляция — скрытие данных.

Наследование — переиспользование свойств и методов.

Полиморфизм — единый интерфейс для разных объектов.

Абстракция — выделение только важных деталей.

В JavaScript реализовано через прототипы и классы (class — синтаксический сахар над прототипами).

4. Как браузер обрабатывает URL

Ввод URL и проверка кэша / Service Worker.

DNS-запрос → IP-адрес.

Установка TCP/TLS соединения.

Отправка HTTP-запроса и получение ответа.

Парсинг HTML → построение DOM.

Загрузка CSS/JS → создание CSSOM.

Объединение DOM + CSSOM → Render Tree.

Layout, paint, отрисовка страницы.

Оптимизация: кэш, CDN, HTTP/2, preload, async/defer, lazy-loading.
Проблемы: CORS, XSS, CSRF, Mixed Content, защищаются заголовками и политиками безопасности.
